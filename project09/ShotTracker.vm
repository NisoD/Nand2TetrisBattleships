function ShotTracker.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push constant 20
pop static 0
push constant 2
pop static 1
push constant 5
pop static 2
push argument 0
pop this 2
push this 2
push this 2
call Math.multiply 2
call Array.new 1
pop this 0
push this 2
push this 2
call Math.multiply 2
call Array.new 1
pop this 1
push pointer 0
call ShotTracker.initializeArrays 1
pop temp 0
push pointer 0
return
function ShotTracker.initializeArrays 2
push argument 0
pop pointer 0
push this 2
push this 2
call Math.multiply 2
pop local 1
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push local 1
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push this 1
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function ShotTracker.calculateIndex 0
push argument 0
pop pointer 0
push argument 1
push this 2
call Math.multiply 2
push argument 2
add
return
function ShotTracker.recordPlayerShot 0
push argument 0
pop pointer 0
push pointer 0
push argument 1
push argument 2
call ShotTracker.calculateIndex 3
push this 0
add
push argument 3
push constant 1
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function ShotTracker.recordComputerShot 0
push argument 0
pop pointer 0
push pointer 0
push argument 1
push argument 2
call ShotTracker.calculateIndex 3
push this 1
add
push argument 3
push constant 1
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function ShotTracker.hasPlayerShot 0
push argument 0
pop pointer 0
push pointer 0
push argument 1
push argument 2
call ShotTracker.calculateIndex 3
push this 0
add
pop pointer 1
push that 0
push constant 0
eq
not
return
function ShotTracker.hasComputerShot 0
push argument 0
pop pointer 0
push pointer 0
push argument 1
push argument 2
call ShotTracker.calculateIndex 3
push this 1
add
pop pointer 1
push that 0
push constant 0
eq
not
return
function ShotTracker.getPlayerShotResult 0
push argument 0
pop pointer 0
push pointer 0
push argument 1
push argument 2
call ShotTracker.calculateIndex 3
push this 0
add
pop pointer 1
push that 0
return
function ShotTracker.getComputerShotResult 0
push argument 0
pop pointer 0
push pointer 0
push argument 1
push argument 2
call ShotTracker.calculateIndex 3
push this 1
add
pop pointer 1
push that 0
return
function ShotTracker.drawShotMarker 2
push argument 0
pop pointer 0
push argument 1
push static 0
push constant 2
call Math.divide 2
add
pop local 0
push argument 2
push static 0
push constant 2
call Math.divide 2
add
pop local 1
push argument 3
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push local 1
push static 1
call Screen.drawCircle 3
pop temp 0
goto IF_END0
label IF_FALSE0
push argument 3
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 1
push static 2
add
push argument 2
push static 2
add
push argument 1
push static 0
add
push static 2
sub
push argument 2
push static 0
add
push static 2
sub
call Screen.drawLine 4
pop temp 0
push argument 1
push static 0
add
push static 2
sub
push argument 2
push static 2
add
push argument 1
push static 2
add
push argument 2
push static 0
add
push static 2
sub
call Screen.drawLine 4
pop temp 0
label IF_FALSE1
label IF_END0
push constant 0
return
function ShotTracker.redrawAllShots 4
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 2
push this 2
call Math.multiply 2
lt
not
if-goto WHILE_END0
push local 0
push this 2
call Math.divide 2
pop local 1
push local 0
push this 2
call Utils.mod 2
pop local 2
push constant 0
not
call Screen.setColor 1
pop temp 0
push local 0
push this 0
add
pop pointer 1
push that 0
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push argument 3
push local 2
push static 0
call Math.multiply 2
add
push argument 4
push local 1
push static 0
call Math.multiply 2
add
push local 0
push this 0
add
pop pointer 1
push that 0
call ShotTracker.drawShotMarker 4
pop temp 0
label IF_FALSE0
push local 0
push this 1
add
pop pointer 1
push that 0
push constant 0
eq
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
push argument 1
push local 2
push static 0
call Math.multiply 2
add
push argument 2
push local 1
push static 0
call Math.multiply 2
add
push local 0
push this 1
add
pop pointer 1
push that 0
call ShotTracker.drawShotMarker 4
pop temp 0
label IF_FALSE1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function ShotTracker.dispose 0
push argument 0
pop pointer 0
push this 0
call Array.dispose 1
pop temp 0
push this 1
call Array.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
