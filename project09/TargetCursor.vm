function TargetCursor.new 0
push constant 10
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 2
push constant 0
pop this 3
push constant 0
pop this 4
push constant 1
neg
pop this 5
push constant 1
neg
pop this 6
push constant 0
pop this 7
push constant 0
pop this 8
push argument 3
pop this 9
push pointer 0
return
function TargetCursor.clearLastPosition 2
push argument 0
pop pointer 0
push this 5
push constant 1
neg
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 6
push this 1
sub
push this 2
call Math.divide 2
pop local 0
push this 5
push this 0
sub
push this 2
call Math.divide 2
pop local 1
push constant 0
call Screen.setColor 1
pop temp 0
push this 5
push constant 5
add
push this 6
push constant 5
add
push this 5
push constant 15
add
push this 6
push constant 15
add
call Screen.drawRectangle 4
pop temp 0
push this 9
push local 0
push local 1
push this 0
push this 1
call PCBoard.redrawCell 5
pop temp 0
label IF_FALSE0
push constant 0
return
function TargetCursor.reset 0
push argument 0
pop pointer 0
push pointer 0
call TargetCursor.clearLastPosition 1
pop temp 0
push constant 0
pop this 3
push constant 0
pop this 4
push constant 1
neg
pop this 5
push constant 1
neg
pop this 6
push constant 0
return
function TargetCursor.update 3
push argument 0
pop pointer 0
push constant 0
pop this 7
push constant 0
pop this 8
call Keyboard.keyPressed 0
pop local 0
push local 0
push constant 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push constant 130
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 4
push constant 0
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 4
push constant 1
sub
pop this 4
label IF_FALSE2
label IF_FALSE1
push local 0
push constant 132
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 4
push constant 9
lt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 4
push constant 1
add
pop this 4
label IF_FALSE4
label IF_FALSE3
push local 0
push constant 131
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push this 3
push constant 0
gt
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push this 3
push constant 1
sub
pop this 3
label IF_FALSE6
label IF_FALSE5
push local 0
push constant 133
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push this 3
push constant 9
lt
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push this 3
push constant 1
add
pop this 3
label IF_FALSE8
label IF_FALSE7
push local 0
push constant 82
eq
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push pointer 0
call TargetCursor.reset 1
pop temp 0
label IF_FALSE9
push local 0
push constant 32
eq
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push constant 0
not
pop this 7
label IF_FALSE10
push local 0
push constant 81
eq
if-goto IF_TRUE11
goto IF_FALSE11
label IF_TRUE11
push constant 0
not
pop this 8
label IF_FALSE11
push this 0
push this 4
push this 2
call Math.multiply 2
add
pop local 1
push this 1
push this 3
push this 2
call Math.multiply 2
add
pop local 2
push pointer 0
call TargetCursor.clearLastPosition 1
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push local 1
push constant 5
add
push local 2
push constant 5
add
push local 1
push constant 15
add
push local 2
push constant 15
add
call Screen.drawRectangle 4
pop temp 0
push local 1
pop this 5
push local 2
pop this 6
label WHILE_EXP0
push local 0
call Keyboard.keyPressed 0
eq
not
if-goto WHILE_END0
push constant 5
call Sys.wait 1
pop temp 0
goto WHILE_EXP0
label WHILE_END0
label IF_FALSE0
push constant 0
return
function TargetCursor.getRow 0
push argument 0
pop pointer 0
push this 3
return
function TargetCursor.getCol 0
push argument 0
pop pointer 0
push this 4
return
function TargetCursor.isActionPressed 0
push argument 0
pop pointer 0
push this 7
return
function TargetCursor.isQuitPressed 0
push argument 0
pop pointer 0
push this 8
return
function TargetCursor.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
