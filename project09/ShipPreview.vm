function ShipPreview.new 0
push constant 8
call Memory.alloc 1
pop pointer 0
push constant 5
pop static 0
push constant 10
pop static 1
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 2
push constant 1
neg
pop this 3
push constant 1
neg
pop this 4
push constant 0
pop this 5
push constant 0
pop this 6
push constant 0
pop this 7
push pointer 0
return
function ShipPreview.hasPreviewChanged 0
push argument 0
pop pointer 0
push argument 1
push this 3
eq
push argument 2
push this 4
eq
and
push argument 3
push this 5
eq
and
push argument 4
push this 6
eq
and
not
return
function ShipPreview.clearPreview 2
push argument 0
pop pointer 0
push this 7
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push this 0
push this 4
push this 2
call Math.multiply 2
add
pop local 0
push this 1
push this 3
push this 2
call Math.multiply 2
add
pop local 1
push constant 0
call Screen.setColor 1
pop temp 0
push this 6
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push static 0
add
push local 1
push static 0
add
push local 0
push static 0
add
push static 1
add
push local 1
push this 5
push this 2
call Math.multiply 2
add
push static 0
sub
call Screen.drawRectangle 4
pop temp 0
goto IF_END1
label IF_FALSE1
push local 0
push static 0
add
push local 1
push static 0
add
push local 0
push this 5
push this 2
call Math.multiply 2
add
push static 0
sub
push local 1
push static 0
add
push static 1
add
call Screen.drawRectangle 4
pop temp 0
label IF_END1
push constant 0
pop this 7
push constant 0
return
function ShipPreview.draw 2
push argument 0
pop pointer 0
push pointer 0
push argument 1
push argument 2
push argument 3
push argument 4
call ShipPreview.hasPreviewChanged 5
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push pointer 0
call ShipPreview.clearPreview 1
pop temp 0
push this 0
push argument 2
push this 2
call Math.multiply 2
add
pop local 0
push this 1
push argument 1
push this 2
call Math.multiply 2
add
pop local 1
push constant 0
not
call Screen.setColor 1
pop temp 0
push argument 4
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push static 0
add
push local 1
push static 0
add
push local 0
push static 0
add
push static 1
add
push local 1
push argument 3
push this 2
call Math.multiply 2
add
push static 0
sub
call Screen.drawRectangle 4
pop temp 0
goto IF_END1
label IF_FALSE1
push local 0
push static 0
add
push local 1
push static 0
add
push local 0
push argument 3
push this 2
call Math.multiply 2
add
push static 0
sub
push local 1
push static 0
add
push static 1
add
call Screen.drawRectangle 4
pop temp 0
label IF_END1
push argument 1
pop this 3
push argument 2
pop this 4
push argument 3
pop this 5
push argument 4
pop this 6
push constant 0
not
pop this 7
push constant 0
return
function ShipPreview.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
